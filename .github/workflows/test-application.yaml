name: Test application

on:
    pull_request:
    push:
        branches:
            - 'master'
            - '[0-9]+.x'
            - '[0-9]+.[0-9]+'
            - '[0-9]+.[0-9]+.x'

jobs:
    test:
        name: 'Run tests with php ${{ matrix.php-version }}'
        runs-on: ubuntu-latest

        env:
            SYMFONY_DEPRECATIONS_HELPER: disabled

        strategy:
            fail-fast: false
            matrix:
                include:
                    - php-version: '5.5'
                      composer-flags: '--prefer-lowest --prefer-dist --no-interaction'
                      tools: 'composer:v1'

                    - php-version: '5.6'
                      composer-flags: '--prefer-dist --no-interaction'
                      tools: 'composer:v2'

                    - php-version: '7.0'
                      composer-flags: '--prefer-lowest --prefer-dist --no-interaction'
                      tools: 'composer:v2'

                    - php-version: '7.2'
                      composer-flags: '--prefer-dist --no-interaction'
                      tools: 'composer:v1'

                    - php-version: '7.4'
                      composer-flags: '--prefer-dist --no-interaction'
                      tools: 'composer:v2'

        steps:
            - name: Checkout project
              uses: actions/checkout@v2

            - name: Install and configure PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  tools: ${{ matrix.tools }}

            - name: Get composer cache directory
              id: composer-cache-dir
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache-dir.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('composer.json', 'composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Install dependencies
              run: |
                  composer validate --strict
                  composer update ${{ matrix.composer-flags }}

            - name: Execute test cases
              run: vendor/bin/phpunit
